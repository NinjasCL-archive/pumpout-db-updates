
-- Add Phoenix mix

INSERT INTO mix (mixId, gameId, internalTitle, parentMixId, sortOrder)
SELECT
    (SELECT MAX(mixId) + 1 FROM mix),
    (SELECT gameId FROM game WHERE internalTitle = 'pump-it-up'),
    'Phoenix',
    (SELECT mixId FROM mix WHERE internalTitle = 'XX'),
    (SELECT MAX(sortOrder) + 10 FROM mix);



-- Add Phoenix v1.00.1 version

INSERT INTO version (versionId, mixId, internalTitle, parentVersionId, sortOrder)
SELECT
    (SELECT MAX(versionId) + 1 FROM version),
    (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix'),
    'v1.00.1',
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'XX')
     AND internalTitle = 'v2.08.0'),
    (SELECT MAX(sortOrder) + 10 FROM version);



-- Add ancestors for Phoenix v1.00.1

INSERT INTO _derived_versionAncestor (versionId, ancestorId, sortOrder, ancestorSortOrder)
SELECT
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1'),
    d.ancestorId,
    (SELECT sortOrder FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1'),
    d.ancestorSortOrder
FROM _derived_versionAncestor d
    JOIN version v on d.versionId = v.versionId
    JOIN mix m on v.mixId = m.mixId
    WHERE m.internalTitle = 'XX' AND v.internalTitle = 'v2.08.0';

INSERT INTO _derived_versionAncestor (versionId, ancestorId, sortOrder, ancestorSortOrder)
SELECT
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1'),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1'),
    (SELECT sortOrder FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1'),
    (SELECT sortOrder FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');



-- Add new artists if they don't exist



-- Add (G)I-DLE
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    '(G)I-DLE'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('(G)I-DLE'));

-- Add DASU
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'DASU'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('DASU'));

-- Add Dreamcatcher
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'Dreamcatcher'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('Dreamcatcher'));

-- Add EBIMAYO
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'EBIMAYO'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('EBIMAYO'));

-- Add GUMI
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'GUMI'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('GUMI'));

-- Add HIGHLIGHT
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'HIGHLIGHT'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('HIGHLIGHT'));

-- Add Hyun
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'Hyun'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('Hyun'));

-- Add IVE
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'IVE'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('IVE'));

-- Add Kagamine Len
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'Kagamine Len'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('Kagamine Len'));

-- Add kanone
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'kanone'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('kanone'));

-- Add litmus*
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'litmus*'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('litmus*'));

-- Add MAX
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'MAX'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('MAX'));

-- Add MIIM
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'MIIM'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('MIIM'));

-- Add Morimori Atsushi
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'Morimori Atsushi'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('Morimori Atsushi'));

-- Add ryhki
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'ryhki'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('ryhki'));

-- Add sakuzyo
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'sakuzyo'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('sakuzyo'));

-- Add SHK
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'SHK'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('SHK'));

-- Add Sobrem
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'Sobrem'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('Sobrem'));

-- Add STAYC
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'STAYC'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('STAYC'));

-- Add Tanchiky
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'Tanchiky'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('Tanchiky'));

-- Add xi
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'xi'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('xi'));

-- Add Yeon Ja Kim
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'Yeon Ja Kim'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('Yeon Ja Kim'));

-- Add Zekk
INSERT INTO artist (artistId, internalTitle)
SELECT 
    (SELECT MAX(artistId) + 1 FROM artist),
    'Zekk'
WHERE NOT EXISTS (SELECT 1 FROM artist WHERE LOWER(internalTitle) = LOWER('Zekk'));



-- Add new stepmakers if they don't exist



-- CONRAD
INSERT INTO stepmaker (stepmakerId, internalTitle)
SELECT
    (SELECT MAX(stepmakerId) + 1 FROM stepmaker),
    'CONRAD'
WHERE NOT EXISTS (SELECT 1 FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD'));

-- Dulki
INSERT INTO stepmaker (stepmakerId, internalTitle)
SELECT
    (SELECT MAX(stepmakerId) + 1 FROM stepmaker),
    'Dulki'
WHERE NOT EXISTS (SELECT 1 FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki'));

-- EXC
INSERT INTO stepmaker (stepmakerId, internalTitle)
SELECT
    (SELECT MAX(stepmakerId) + 1 FROM stepmaker),
    'EXC'
WHERE NOT EXISTS (SELECT 1 FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC'));

-- FEFEMZ
INSERT INTO stepmaker (stepmakerId, internalTitle)
SELECT
    (SELECT MAX(stepmakerId) + 1 FROM stepmaker),
    'FEFEMZ'
WHERE NOT EXISTS (SELECT 1 FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ'));

-- NIMGO
INSERT INTO stepmaker (stepmakerId, internalTitle)
SELECT
    (SELECT MAX(stepmakerId) + 1 FROM stepmaker),
    'NIMGO'
WHERE NOT EXISTS (SELECT 1 FROM stepmaker WHERE LOWER(internalTitle) = LOWER('NIMGO'));

-- SPHAM
INSERT INTO stepmaker (stepmakerId, internalTitle)
SELECT
    (SELECT MAX(stepmakerId) + 1 FROM stepmaker),
    'SPHAM'
WHERE NOT EXISTS (SELECT 1 FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM'));

-- SUNNY
INSERT INTO stepmaker (stepmakerId, internalTitle)
SELECT
    (SELECT MAX(stepmakerId) + 1 FROM stepmaker),
    'SUNNY'
WHERE NOT EXISTS (SELECT 1 FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY'));



-- Add new songs



-- Add BOCA

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'BOCA';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('Dreamcatcher')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'K-POP');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    200,
    200;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0001';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0001'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'BOCA';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '보카';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_BOCA.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add BOCA S3

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 3);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA S5

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 5);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA S9

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 9);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA S14

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 14);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA S17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA S19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA S21

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 21);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA D15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA D19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA D21

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 21);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add BOCA D23

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 23);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Nxde

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Nxde';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('(G)I-DLE')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'K-POP');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    136,
    136;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0002';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0002'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Nxde';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '누드';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Nxde.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Nxde S2

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 2);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde S4

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 4);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde S6

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 6);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde S11

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 11);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde S14

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 14);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde S16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde D8

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 8);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde D15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde D17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Nxde CoOp(x2)

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'C'),
    (SELECT difficultyId FROM difficulty WHERE value = 2);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Teddy Bear

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Teddy Bear';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('STAYC')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'K-POP');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    119,
    119;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0003';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0003'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Teddy Bear';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '테디베어';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Teddy_Bear.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Teddy Bear S2

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 2);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear S4

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 4);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear S6

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 6);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear S9

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 9);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear S14

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 14);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear S17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear D7

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 7);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear D15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear D18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Teddy Bear CoOp(x2)

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'C'),
    (SELECT difficultyId FROM difficulty WHERE value = 2);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Alone

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Alone';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('HIGHLIGHT')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'K-POP');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    115,
    115;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0004';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0004'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Alone';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '얼론';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Alone.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Alone S1

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 1);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Alone S3

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 3);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Alone S5

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 5);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Alone S8

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 8);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Alone S15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Alone S17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Alone D6

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 6);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Alone D16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Alone D18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Amor Fati

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Amor Fati';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('Yeon Ja Kim')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'K-POP');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    134,
    134;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0005';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0005'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Amor Fati';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '아모르 파티';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Amor_Fati.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Amor Fati S2

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 2);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Amor Fati S4

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 4);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Amor Fati S6

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 6);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Amor Fati S15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Amor Fati S18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Amor Fati S21

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 21);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Amor Fati D16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Amor Fati D19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Amor Fati D23

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 23);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add After LIKE

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'After LIKE';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('IVE')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'K-POP');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    125,
    125;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0006';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0006'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'After LIKE';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '애프터 라이크';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_After_LIKE.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add After LIKE S1

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 1);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE S4

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 4);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE S6

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 6);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE S9

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 9);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE S13

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 13);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE S15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE S18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE D7

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 7);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE D15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE D17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE D20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add After LIKE CoOp(x2)

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'C'),
    (SELECT difficultyId FROM difficulty WHERE value = 2);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add VECTOR

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'VECTOR';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('Zekk')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'ORIGINAL');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    178,
    178;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0007';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0007'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'VECTOR';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '벡터';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_VECTOR.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add VECTOR S8

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 8);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add VECTOR S14

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 14);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add VECTOR S18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add VECTOR S22

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 22);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add VECTOR D15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add VECTOR D20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add VECTOR D24

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 24);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SPHAM')),
    0,
    '';



-- Add Versailles

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Versailles';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('Hyun')),
    0,
    '';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('MIIM')),
    1,
    '&';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'ORIGINAL');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    160,
    175;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0008';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0008'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Versailles';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '베르사이유';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Versailles.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Versailles S7

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 7);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Versailles S10

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 10);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Versailles S16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Versailles S19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Versailles S20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Versailles D12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Versailles D20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Versailles D23

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 23);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Showdown';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('litmus*')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'ORIGINAL');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    130,
    130;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0009';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0009'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Showdown';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '쇼다운';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Showdown.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Showdown S6

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 6);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown S10

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 10);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown S14

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 14);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown S17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown S20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown D11

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 11);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown D16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown D18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Showdown D22

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 22);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Euphorianic';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('SHK')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'ORIGINAL');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    140,
    140;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0010';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0010'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Euphorianic';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '유포리아닉';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Euphorianic.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Euphorianic S3

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 3);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic S5

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 5);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic S8

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 8);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic S11

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 11);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic S16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic S19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic D10

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 10);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic D18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Euphorianic D21

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 21);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Jupin

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Jupin';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('Sobrem')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'ORIGINAL');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    173,
    173;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0011';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0011'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Jupin';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '쥬핀';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Jupin.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Jupin S12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Jupin S17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Jupin S19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Jupin S21

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 21);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Jupin S23

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 23);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Jupin D14

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 14);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Jupin D18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Jupin D23

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 23);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Jupin D25

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 25);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Etude Op 10-4

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Etude Op 10-4';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('MAX')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'ORIGINAL');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    176,
    176;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0012';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0012'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Etude Op 10-4';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '추격';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Etude_Op_10_4.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Etude Op 10-4 S4

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 4);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Etude Op 10-4 S7

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 7);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Etude Op 10-4 S11

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 11);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Etude Op 10-4 S16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Etude Op 10-4 S22

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 22);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Etude Op 10-4 D13

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 13);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Etude Op 10-4 D17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('SUNNY')),
    0,
    '';



-- Add Etude Op 10-4 D25

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 25);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add GOODTEK

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'GOODTEK';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('EBIMAYO')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'WORLD MUSIC');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    190,
    190;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0013';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0013'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'GOODTEK';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '굿텍';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_GOODTEK.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add GOODTEK S8

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 8);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add GOODTEK S12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add GOODTEK S16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add GOODTEK S18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add GOODTEK S21

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 21);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add GOODTEK D12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add GOODTEK D16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add GOODTEK D20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add GOODTEK D24

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 24);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add CO5M1C R4ILR0AD

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'CO5M1C R4ILR0AD';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('kanone')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'WORLD MUSIC');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    155,
    155;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0014';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0014'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'CO5M1C R4ILR0AD';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '코스믹 레일로드';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_CO5M1C_R4ILR0AD.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add CO5M1C R4ILR0AD S10

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 10);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add CO5M1C R4ILR0AD S15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add CO5M1C R4ILR0AD S18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add CO5M1C R4ILR0AD S21

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 21);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add CO5M1C R4ILR0AD D13

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 13);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add CO5M1C R4ILR0AD D19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add CO5M1C R4ILR0AD D22

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 22);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Energy Synergy Matrix

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Energy Synergy Matrix';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('Tanchiky')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'WORLD MUSIC');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    160,
    160;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0015';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0015'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Energy Synergy Matrix';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '에너지 시너지 매트릭스';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Energy_Synergy_Matrix.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Energy Synergy Matrix S7

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 7);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Energy Synergy Matrix S11

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 11);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Energy Synergy Matrix S16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Energy Synergy Matrix S18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Energy Synergy Matrix S20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Energy Synergy Matrix D13

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 13);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Energy Synergy Matrix D19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add Energy Synergy Matrix D22

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 22);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('Dulki')),
    0,
    '';



-- Add MilK

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'MilK';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('Morimori Atsushi')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'WORLD MUSIC');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    150,
    150;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0016';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0016'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'MilK';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '밀크';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_MilK.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add MilK S7

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 7);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add MilK S11

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 11);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add MilK S15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add MilK S17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add MilK S20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add MilK D11

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 11);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add MilK D16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add MilK D19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add MilK D22

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 22);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Acquire

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Acquire';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('ryhki')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'WORLD MUSIC');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    155,
    155;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0017';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0017'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Acquire';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '어콰이어';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Acquire.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Acquire S7

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 7);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire S11

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 11);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire S15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire S17

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 17);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire S20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire D12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire D16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire D19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire D23

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 23);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Acquire CoOp(x3)

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'C'),
    (SELECT difficultyId FROM difficulty WHERE value = 3);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('CONRAD')),
    0,
    '';



-- Add Pneumonoultramicroscopicsilicovolcanoconiosis

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Pneumonoultramicroscopicsilicovolcanoconiosis';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('DASU')),
    0,
    '';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('Kagamine Len')),
    1,
    'ft.';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('GUMI')),
    2,
    '/';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'WORLD MUSIC');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    156,
    156;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0018';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0018'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Pneumonoultramicroscopicsilicovolcanoconiosis ft. Kagamine Len/GUMI';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '진폐증';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Pneumonoultramicroscopicsilicovolcanoconiosis.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Pneumonoultramicroscopicsilicovolcanoconiosis S12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Pneumonoultramicroscopicsilicovolcanoconiosis S16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Pneumonoultramicroscopicsilicovolcanoconiosis S19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Pneumonoultramicroscopicsilicovolcanoconiosis D22

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 22);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('EXC')),
    0,
    '';



-- Add Altale

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Altale';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('sakuzyo')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'WORLD MUSIC');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    90,
    90;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0019';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0019'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Altale';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '알테일';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Altale.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Altale S2

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 2);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale S6

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 6);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale S9

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 9);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale S12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale S15

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 15);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale S18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale S21

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 21);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale D6

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 6);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale D16

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 16);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale D19

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 19);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Altale D23

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 23);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('FEFEMZ')),
    0,
    '';



-- Add Halcyon

INSERT INTO song (songId, cutId, internalTitle)
SELECT
    (SELECT MAX(songId) + 1 FROM song),
    (SELECT cutId FROM cut WHERE internalTitle = 'Arcade'),
    'Halcyon';

INSERT INTO songArtist (songId, artistId, sortOrder, prefix)
SELECT
    (SELECT MAX(songId) FROM song),
    (SELECT artistId FROM artist WHERE LOWER(internalTitle) = LOWER('xi')),
    0,
    '';

INSERT INTO songCategory (songCategoryId, songId, categoryId)
SELECT 
    (SELECT MAX(songCategoryId) + 1 FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT categoryId FROM category WHERE internalTitle = 'WORLD MUSIC');

INSERT INTO songCategoryVersion (songCategoryId, songId, versionId)
SELECT 
    (SELECT MAX(songCategoryId) FROM songCategory),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO songBpm (songBpmId, songId, bpmMin, bpmMax)
SELECT
    (SELECT MAX(songBpmId) + 1 FROM songBpm),
    (SELECT MAX(songId) FROM song),
    40,
    191;

INSERT INTO songBpmVersion (songBpmId, songId, versionId)
SELECT
    (SELECT MAX(songBpmId) FROM songBpm),
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1');

INSERT INTO songGameIdentifier (songGameIdentifierId, songId, gameIdentifier)
SELECT
    (SELECT MAX(songGameIdentifierId) + 1 FROM songGameIdentifier),
    (SELECT MAX(songId) FROM song),
    '17XX_0020';

INSERT INTO songGameIdentifierVersion (songGameIdentifierId, versionId, operationId, internalDescription)
SELECT 
    (SELECT songGameIdentifierId FROM songGameIdentifier WHERE gameIdentifier = '17XX_0020'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    'Halcyon';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'English'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songTitle (songTitleId, songId, languageId, title)
SELECT 
    (SELECT MAX(songTitleId) + 1 FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    '할시온';

INSERT INTO songTitleVersion (songTitleId, songId, languageId, versionId)
SELECT 
    (SELECT MAX(songTitleId) FROM songTitle),
    (SELECT MAX(songId) FROM song),
    (SELECT languageId FROM language WHERE internalTitle = 'Korean'),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');
 
INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songId) FROM song),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO songCard (songCardId, songId, path, sortOrder)
SELECT 
    (SELECT MAX(songCardId) + 1 FROM songCard),
    (SELECT MAX(songId) FROM song),
    '/img/card/Phoenix_Halcyon.png',
    0;

INSERT INTO songCardVersion (songCardId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(songCardId) FROM songCard),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;



-- Add Halcyon S12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('NIMGO')),
    0,
    '';



-- Add Halcyon S18

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 18);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('NIMGO')),
    0,
    '';



-- Add Halcyon S20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('NIMGO')),
    0,
    '';



-- Add Halcyon S22

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
    (SELECT difficultyId FROM difficulty WHERE value = 22);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('NIMGO')),
    0,
    '';



-- Add Halcyon D12

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 12);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('NIMGO')),
    0,
    '';



-- Add Halcyon D20

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 20);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('NIMGO')),
    0,
    '';



-- Add Halcyon D24

INSERT INTO chart (chartId, songId)
SELECT 
    (SELECT MAX(chartId) + 1 FROM chart),
    (SELECT MAX(songId) FROM song);

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
    (SELECT MAX(chartRatingId) + 1 FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
    (SELECT difficultyId FROM difficulty WHERE value = 24);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT 
    (SELECT MAX(chartRatingId) FROM chartRating),
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1');

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
    (SELECT MAX(chartId) FROM chart),
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'INSERT'),
    NULL;

INSERT INTO chartStepmaker (chartId, stepmakerId, sortOrder, prefix)
SELECT
    (SELECT MAX(chartId) FROM chart),
    (SELECT stepmakerId FROM stepmaker WHERE LOWER(internalTitle) = LOWER('NIMGO')),
    0,
    '';



-- Remove deleted songs



-- Remove The Little Prince (Prod. Godic)

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    768,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 768
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Black Cat

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    792,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 792
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Hann (Alone)

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    731,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 731
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Snapping

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    820,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 820
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Nekkoya (Pick Me)

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    732,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 732
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove I'm So Sick

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    747,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 747
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Boomerang

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    748,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 748
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Gashina

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    778,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 778
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Adios

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    813,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 813
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove HIT

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    816,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 816
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove BBoom BBoom

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    749,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 749
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Rooftop

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    812,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 812
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Bungee (Fall in Love)

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    815,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 815
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Starry Night

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    783,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 783
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Love Scenario

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    750,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 750
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Time for the Moon Night

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    776,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 776
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Bon Bon Chocolat

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    827,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 827
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Very Nice

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    751,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 751
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Good Bye

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    752,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 752
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove King of Sales

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    793,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 793
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Gotta Go

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    836,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 836
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Boong Boong (Feat. Sik-K) (Prod. GroovyRoom)

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    769,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 769
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Conflict

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    784,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 784
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove HANN (Alone) - FULL SONG -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    809,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 809
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove NEKKOYA(PICK ME) - FULL SONG -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    842,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 842
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove BBoom BBoom  [FULL]

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    760,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 760
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove I'm so sick - FULL SONG -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    828,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 828
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Gashina - FULL SONG -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    790,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 790
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Starry Night - FULL SONG -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    794,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 794
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Time for the moon night - FULL SONG -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    835,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 835
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove VERY NICE - FULL SONG -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    825,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 825
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove GOOD BYE - FULL SONG -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    841,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 841
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Energetic

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    661,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 661
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Beautiful

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    662,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 662
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Pick Me

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    668,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 668
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Really Really

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    663,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 663
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Moon Light Dance

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    531,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 531
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Just Kiddin

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    621,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 621
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Seize My Day

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    638,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 638
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Creed - 1st Desire -

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    347,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 347
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Sora no Shirabe

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    355,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 355
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove FOUR SEASONS OF LONELINESS ver B feat. Sariyajin

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    451,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 451
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Ai, Yurete...

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    452,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 452
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Setsuna Trip

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    449,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 449
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Trashy Innocence

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    450,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 450
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Renai Yuusha

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    459,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 459
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Houkago Stride

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    460,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 460
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Bad ~ End ~ Night

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    466,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 466
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove FOUR SEASONS OF LONELINESS verB feat. Sariyajin - FULL SONG

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    455,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 455
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove Creed - 1st Desire - [FULL SONG]

INSERT INTO songVersion (songId, versionId, operationId, internalDescription)
SELECT 
    477,
    (SELECT versionId FROM version 
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix') 
     AND internalTitle = 'v1.00.1'),
    (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
    NULL;

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1'),
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE'),
  NULL
FROM (
  SELECT
    crv.chartId,
    cv.operationId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 477
  AND v.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE rn = 1 
AND operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE');



-- Remove deleted charts which songs weren't deleted



--  Remove Dolly Kiss S3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 351
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Hi Bi S3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 56
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Silver Beat feat. ChisaUezono S4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 676
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Arch of Darkness S4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 101
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Bee S4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 25
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Emperor S5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 29
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Final Audition S6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 12
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Silver Beat feat. ChisaUezono S7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 676
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Naissance S7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 9
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Repeatorment Remix S7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 14
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Turkey Virus S8

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 421
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Remove Arch of Darkness S8

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 101
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Remove Beat of the War S11

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 26
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Remove Dance With Me S12

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 39
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Remove Mission Possible S13

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 436
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Remove We Will Meet Again S14

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 439
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Remove Naissance S16

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 9
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Remove Move That Body!  [FULL] S17

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 468
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Remove We Got 2 Know S20

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 178
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Remove Gargoyle  [FULL] S21

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 596
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Remove La Cinquantaine S22

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 838
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Remove 1949 S26

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 777
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 26);



--  Remove Chopsticks Challenge D3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 80
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Beat the Ghost D7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 93
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Arch of Darkness D7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 101
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Papa Gonzales D7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 52
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Mission Possible D8

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 436
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Remove Repeatorment Remix D8

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 14
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Remove Hello D9

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 434
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Remove Money D10

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 411
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Remove Guitar Man D10

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 405
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Remove Betrayer D11

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 441
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Remove Guitar Man D13

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 405
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Remove Chicken Wing D13

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 42
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Remove Beat of the War D13

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 26
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Remove Chinese Restaurant D16

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 284
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Remove Arch of Darkness D20

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 101
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Remove Indestructible D21

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 824
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Remove Phalanx "RS2018 edit" D22

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 801
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Remove La Cinquantaine D24

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 838
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Remove Allegro Con Fuoco SP1

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 202
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Remove Smells Like a Chocolate SP1

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 204
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Remove Xenesis SP1

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 134
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Remove Chopsticks Challenge SP1

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 80
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Remove Higgledy Piggledy SP1

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 98
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Remove First Love SP1

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 443
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Remove Free Style SP1

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 444
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Remove Interference SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 173
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Butterfly SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 176
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Overblow SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 177
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove We Got 2 Know SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 178
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Gargoyle SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 201
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Hungarian Dance V SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 179
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove X-Rave SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 203
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Native SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 181
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Necromancy SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 205
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Pavane SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 189
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove XTREE SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 129
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove U Got 2 Know SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 131
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Jam O Beat SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 408
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove My Way SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 32
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Oy Oy Oy SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 37
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Pump Jump SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 499
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove N SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 446
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Betrayer SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 441
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Close Your Eye SP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 442
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Yoropiku Pikuyoro! SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 465
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Betrayer -Act. 2- SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 369
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Mission Possible -Blowback- SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 381
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Toccata SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 85
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Witch Doctor #1 SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 100
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Solitary 2 SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 57
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Final Audition 3 SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 63
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Naissance 2 SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 64
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Come to Me SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 27
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Emperor SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 29
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Point Break SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 33
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Miss S' Story SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 435
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Solitary SP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 5
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Reality SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 174
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Do It reggae Style SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 372
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Pumping Jumping SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Solitary 1.5 SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 92
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Money SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 411
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Street Show Down SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 437
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Set Me Up SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 38
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Dance With Me SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 39
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Midnight Blue SP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 11
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Tek -Club Copenhagen- SP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 136
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Monkey Fingers SP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 65
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Pumptris Quattro SP10

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 97
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Remove Extravaganza - SHORT CUT SP15

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 152
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Remove Pumptris 8Bit ver. SP15

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 91
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Remove Pop Sequence SP18

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 891
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'SP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Remove Turkey March -Minimal Tunes- DP1

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 138
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Remove La Cinquantaine DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 838
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Poseidon DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 741
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Broken Karma (PIU Edit) DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 839
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Dement ~After Legend~ DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 759
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Arcana Force DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 514
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Awakening DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 678
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Step DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 625
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove V3 DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 664
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Elysium DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 476
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Super Fantasy DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 288
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Cosmical Rhythm DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 306
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Milky Way Galaxy DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 324
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Feel My Happiness DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 508
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Bad Apple!! feat. Nomico DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 342
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Just Hold On (To All Fighters) DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 478
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Like Me DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 511
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Reality DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 174
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Arirang DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 135
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Final Audition Ep. 2-X DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 86
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Pumptris Quattro DP2

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 97
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Remove Transacaglia in G-minor DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 823
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Janus DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 817
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Iolite Sky DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 837
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Macaron Day DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 740
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Ice of Death DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 771
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Tales of Pumpnia DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 805
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Orbit Stabilizer DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 802
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Full Moon DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 800
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Fly High DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 730
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove You and I DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 779
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove 8 6 DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 754
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Lala DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 808
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Danger & Danger DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 831
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Obelisque DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 757
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Rage of Fire DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 782
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Rising Star DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 795
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Cutie Song DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 840
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Loki DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 758
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Phalanx "RS2018 edit" DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 801
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Point Zero 2 DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 832
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Can-Can ~Orpheus in the Party Mix~ DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 785
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Papasito (feat. KuTiNA) DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 786
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Fires of Destiny DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 787
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove The End of the World ft. Skizzo DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 788
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Last Rebirth DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 516
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Shub Niggurath DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 641
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Further DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 519
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Silver Beat feat. ChisaUezono DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 676
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Kasou Shinja DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 624
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Overblow2 DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 644
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Passing Rider DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 679
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Anguished Unmaking DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 658
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Travel to Future DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 673
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Rave'til the Earth's End DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 669
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Waltz of Doge DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 682
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Chase Me DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 623
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Good Night DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 631
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Heart Attack DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 653
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Cross Time DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 655
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Start On Red DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 637
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Time Attack <Blue> DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 650
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Magical Vacation DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 642
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Visual Dream2 (In Fiction) DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 687
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Death Moon DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 532
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Keep On! DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 656
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Asterios -ReEntry- DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 515
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Fallen Angel DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 494
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Latino Virus DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 282
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Chinese Restaurant DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 284
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Avalanche DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 327
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Force of Ra DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 502
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove B2 DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 349
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Meteorize DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 286
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Hestia DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 6
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Leakage Voltage DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 287
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Removable Disk0 DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 507
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Blaze emotion (Band version) DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 505
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove 1950 DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 350
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Move That Body! DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 340
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Rock the House DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 291
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Scorpion King DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 472
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove The Revolution DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 453
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Selfishness DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 325
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Dolly Kiss DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 351
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Matador DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 307
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Ragnarok DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 308
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Achluoias DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 322
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Stardust Overdrive DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 454
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Reminiscence DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 463
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Amai Yuuwaku Dangerous DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 461
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Prime DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 458
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Queen of the Red DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 471
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove U Got Me Rocking DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 222
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Interference DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 173
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Butterfly DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 176
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Overblow DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 177
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove We Got 2 Know DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 178
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Native DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 181
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Smells Like a Chocolate DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 204
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Necromancy DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 205
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove XTREE DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 129
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Betrayer -Act. 2- DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 369
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Vacuum DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 133
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Get Up (and Go) DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 139
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Phantom -Intermezzo- DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 140
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Emperor DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 29
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Till the End of Time DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 36
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Oy Oy Oy DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 37
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Beethoven Virus DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 4
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Final Audition 2 DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 8
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Close Your Eye DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 442
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Free Style DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 444
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Final Audition DP3

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 12
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Remove Wedding Crashers DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 733
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Switronic DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 821
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove 1949 DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 777
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove District 1 DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 829
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Nyarlathotep DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 736
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Lepton Strike DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 818
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Skeptic DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 737
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove %X (Percent X) DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 738
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove CARMEN BUS DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 803
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Adrenaline Blaster DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 830
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Vanish DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 742
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Kimchi Fingers DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 743
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Wicked Legend DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 811
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove TanTanMen DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 796
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Timing DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 770
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove CROSS SOUL DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 806
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove After a thousand years DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 814
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove F(R)IEND DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 798
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Black Swan DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 756
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Dual Racing <RED vs BLUE> DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 833
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Cycling! DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 826
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Uranium DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 819
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Your Mind DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 810
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Nihilism - Another Ver.- DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 773
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Forgotten Vampire DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 789
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Super Capriccio DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 657
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Hellfire DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 517
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Tritium DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 675
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove CROSS OVER feat. LyuU DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 681
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove God Mode feat. skizzo DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 518
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Sarabande DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 521
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Allegro Furioso DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 632
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Hey U DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 645
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Twist of Fate (feat. Ruriling) DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 659
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove HTTP DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 660
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Escape DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 689
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Nakakapagpabagabag DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 654
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove HUSH DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 629
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Hyperion DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 628
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Black Dragon DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 683
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Super Stylin' DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 633
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Christmas Memories DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 533
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Infinity DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 665
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Gothique Resonance DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 677
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Bedlam DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 646
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Clue DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 620
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Kill Them! DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 651
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Donatello DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 671
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Nemesis DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 281
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Katkoi DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 348
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Silhouette Effect DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 352
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Requiem DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 285
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove You Got Me Crazy DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 330
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Amphitryon DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 504
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Violet Perfume DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 469
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Red Swan DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 289
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Hyacinth DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 462
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Allegro Piu Mosso DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 290
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Annihilator Method DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 353
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Point Zero One DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 475
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Red Snow DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 482
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove You again my love DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 512
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Karyawisata DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 309
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove video out c DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 467
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Yoropiku Pikuyoro! DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 465
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Imprinting DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 346
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Sudden Romance [PIU Edit] DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 345
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Mitotsudaira DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 344
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Hypercube DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 470
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove U Got 2 Know DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 131
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Tek -Club Copenhagen- DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 136
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove My Way DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 32
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Set Me Up DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 38
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Dance With Me DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 39
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Pump Jump DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 499
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove First Love DP4

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 443
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Remove Obliteration DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 734
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove I Want U DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 735
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove HEART RABBIT COASTER DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 799
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Le Grand Rouge DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 739
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Club Night DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 753
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Indestructible DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 824
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Imagination DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 755
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Xeroize DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 772
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Bring Back the Beat DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 520
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Utsushiyo No Kaze feat. Kana DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 636
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Up & Up (Produced by AWAL) DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 672
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove The Festival of Ghost2 (Sneak) DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 670
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Helix DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 627
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove BSPower Explosion DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 688
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Redline DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 634
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Yog-Sothoth DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 283
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Mad5cience DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 481
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Sugar Conspiracy Theory DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 339
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Campanella DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 509
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Robot Battle DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 292
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Moment Day DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 501
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Smile Diary DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 343
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Destination DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 132
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Do It reggae Style DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 372
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Mission Possible -Blowback- DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 381
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Pumping Jumping DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove My Dreams DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 84
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove 2006 Love Song DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 392
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove J Bong DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 55
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Final Audition 3 DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 63
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Naissance 2 DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 64
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Miss S' Story DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 435
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove N DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 446
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Solitary DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 5
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove A Nightmare DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 440
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Midnight Blue DP5

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 11
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Remove Le Grand Bleu DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 534
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Allegro Con Fuoco DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 202
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove X-Rave DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 203
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Pumping Jumping DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Toccata DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 85
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Solitary 1.5 DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 92
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Jam O Beat DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 408
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Solitary 2 DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 57
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove BanYa HipHop Remix DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 61
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Come to Me DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 27
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove My Way DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 32
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Point Break DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 33
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Street Show Down DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 437
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Dance With Me DP6

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 39
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Remove Witch Doctor #1 DP7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 100
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Phantom DP7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 51
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Set Me Up DP7

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 38
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Remove Do U Know That-Old School DP8

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 103
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Remove Red Swan DP20

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 289
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Remove Pop Sequence DP22

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 891
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Remove Reminiscence DP23

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 463
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Remove Prime Time DP24

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 807
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'DP')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Remove Yeo Rae A COOP(X5)

INSERT INTO chartVersion (chartId, versionId, operationId, internalDescription)
SELECT 
  sub.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1') as versionId,
  (SELECT operationId FROM operation WHERE internalTitle = 'DELETE') as operationId,
  NULL
FROM (
  SELECT 
    crv.chartId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 246
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'C')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



-- Rerate charts



--  Rerate God Mode 2.0 feat. Skizzo S18 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 874
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 874
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Kokugen Kairou Labyrinth S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 888
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 888
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Wedding Crashers D22 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 733
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 733
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate Switronic S18 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 821
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 821
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Switronic D19 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 821
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 821
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Obliteration S11 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 734
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 734
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Obliteration S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 734
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 734
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Obliteration S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 734
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 734
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Obliteration D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 734
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 734
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Transacaglia in G-minor D21 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 823
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 823
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate 1949 D21 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 777
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 777
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate I Want U S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 735
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 735
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate I Want U S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 735
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 735
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate I Want U S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 735
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 735
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate I Want U D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 735
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 735
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate I Want U D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 735
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 735
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate I Want U D21 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 735
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 735
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Sugar Plum S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 885
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 885
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Sugar Plum D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 885
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 885
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Nyarlathotep S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 736
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 736
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Nyarlathotep S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 736
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 736
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Nyarlathotep D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 736
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 736
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate HEART RABBIT COASTER S11 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 799
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 799
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Lepton Strike S22 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 818
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 818
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Skeptic S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 737
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 737
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Iolite Sky D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 837
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 837
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate %X (Percent X) S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 738
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 738
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate %X (Percent X) S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 738
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 738
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate La Cinquantaine S6 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 838
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 838
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate La Cinquantaine S10 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 838
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 838
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate La Cinquantaine D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 838
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 838
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate La Cinquantaine D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 838
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 838
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Le Grand Rouge S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 739
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 739
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Ice of Death S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 771
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 771
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Ice of Death D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 771
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 771
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Ice of Death D21 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 771
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 771
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Poseidon S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 741
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 741
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Poseidon S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 741
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 741
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Adrenaline Blaster S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 830
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 830
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Adrenaline Blaster D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 830
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 830
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Adrenaline Blaster D22 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 830
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 830
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate Vanish D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 742
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 742
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Vanish D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 742
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 742
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Tales of Pumpnia S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 805
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 805
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Tales of Pumpnia S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 805
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 805
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Tales of Pumpnia D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 805
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 805
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Tales of Pumpnia D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 805
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 805
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Tales of Pumpnia D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 805
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 805
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Kimchi Fingers D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 743
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 743
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Orbit Stabilizer S6 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 802
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 802
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate DESTRUCIMATE S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 845
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 845
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate DESTRUCIMATE S22 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 845
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 845
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate DESTRUCIMATE D15 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 845
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 845
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate DESTRUCIMATE D24 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 845
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 845
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate Clematis Rapsodia D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 846
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 846
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Wicked Legend S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 811
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 811
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Wicked Legend S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 811
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 811
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate TanTanMen D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 796
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 796
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Stardream (feat. Romelon) D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 847
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 847
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Slapstick Parfait D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 881
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 881
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Paved Garden D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 890
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 890
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Paved Garden D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 890
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 890
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Pop Sequence D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 891
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 891
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Crossing Delta S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 879
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 879
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Crossing Delta S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 879
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 879
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Crossing Delta D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 879
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 879
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Crossing Delta D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 879
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 879
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Timing S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 770
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 770
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Timing D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 770
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 770
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate You and I S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 779
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 779
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate You and I D25 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 779
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 25)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 779
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 25)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Club Night S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 753
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 753
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Club Night S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 753
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 753
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Club Night S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 753
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 753
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Indestructible S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 824
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 824
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Indestructible S13 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 824
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 824
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Indestructible D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 824
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 824
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Broken Karma (PIU Edit) S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 839
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 839
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate After a thousand years S20 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 814
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 814
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate After a thousand years D21 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 814
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 814
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Lala S15 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 808
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 808
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Lala D7 -> D8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 808
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 808
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Danger & Danger D15 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 831
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 831
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Imagination S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 755
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 755
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Black Swan S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 756
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 756
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Obelisque D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 757
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 757
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Rage of Fire D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 782
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 782
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Dual Racing <RED vs BLUE> D20 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 833
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 833
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Dual Racing <RED vs BLUE> D22 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 833
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 833
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Cycling! S20 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 826
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 826
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Cycling! D21 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 826
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 826
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Uranium S16 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 819
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 819
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Uranium D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 819
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 819
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Rising Star S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 795
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 795
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Rising Star D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 795
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 795
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Headless Chicken S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 848
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 848
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Over The Horizon S15 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 849
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 849
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Loki S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 758
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 758
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Loki D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 758
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 758
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Dement ~After Legend~ D21 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 759
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 759
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Houseplan D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 850
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 850
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Your Mind S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 810
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 810
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Nihilism - Another Ver.- D23 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 773
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 773
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Brain Power S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 872
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 872
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Gloria D24 -> D25

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 25)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 887
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 25)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 887
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 25);



--  Rerate Can-Can ~Orpheus in the Party Mix~ S22 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 785
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 785
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Papasito (feat. KuTiNA) S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 786
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 786
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate The End of the World ft. Skizzo S17 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 788
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 788
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate The End of the World ft. Skizzo D8 -> D7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 788
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 788
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate The End of the World ft. Skizzo D21 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 788
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 788
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Repentance D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 884
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 884
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate The Reverie D21 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 876
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 876
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Mopemope S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 894
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 894
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Mopemope D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 894
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 894
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Mopemope D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 894
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 894
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate CROSS RAY S22 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 896
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 896
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Cygnus S22 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 897
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 897
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Cygnus D24 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 897
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 897
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate Brown Sky S24 -> S25

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 25)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 900
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 25)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 900
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 25);



--  Rerate Papasito (feat. KuTiNA) - FULL SONG - D21 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 889
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 889
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate MeteoScience (GADGET mix) D19 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 781
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 781
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Prime Time D21 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 807
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 807
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Fire Noodle Challenge S20 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 834
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 834
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Fire Noodle Challenge D21 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 834
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 834
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Switronic - SHORT CUT - S10 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 822
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 822
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Switronic - SHORT CUT - S18 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 822
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 822
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Switronic - SHORT CUT - D5 -> D4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 822
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 822
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Switronic - SHORT CUT - D12 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 822
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 822
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Switronic - SHORT CUT - D18 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 822
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 822
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate 86- FULL SONG - S16 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 774
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 774
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Baroque Virus - FULL SONG - S16 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 851
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 851
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Baroque Virus - FULL SONG - S19 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 851
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 851
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Last Rebirth S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 516
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 516
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Last Rebirth S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 516
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 516
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Last Rebirth D7 -> D8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 516
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 516
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Last Rebirth D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 516
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 516
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Super Capriccio S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 657
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 657
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Hellfire D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 517
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 517
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate God Mode feat. skizzo S5 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 518
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 518
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Shub Niggurath S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 641
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 641
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Further S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 519
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 519
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Further S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 519
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 519
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate The Quick Brown Fox Jumps Over The Lazy Dog S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 686
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 686
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate The Quick Brown Fox Jumps Over The Lazy Dog D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 686
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 686
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Silver Beat feat. ChisaUezono S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 676
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 676
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Silver Beat feat. ChisaUezono D7 -> D8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 676
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 676
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Silver Beat feat. ChisaUezono D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 676
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 676
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Bring Back the Beat D8 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 520
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 520
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Kasou Shinja S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 624
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 624
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Kasou Shinja D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 624
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 624
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Overblow2 S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 644
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 644
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Overblow2 D7 -> D8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 644
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 644
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Overblow2 D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 644
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 644
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Allegro Furioso S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 632
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 632
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Allegro Furioso S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 632
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 632
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Allegro Furioso S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 632
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 632
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Anguished Unmaking S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 658
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 658
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Anguished Unmaking D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 658
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 658
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Anguished Unmaking D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 658
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 658
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate HTTP D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 660
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 660
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate HTTP D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 660
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 660
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate HTTP D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 660
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 660
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Up & Up (Produced by AWAL) D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 672
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 672
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Up & Up (Produced by AWAL) D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 672
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 672
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Travel to Future D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 673
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 673
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Rave'til the Earth's End D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 669
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 669
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Good Night S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 631
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 631
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Good Night D5 -> D6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 631
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 631
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Nakakapagpabagabag S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 654
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 654
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Heart Attack D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 653
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 653
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Heart Attack D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 653
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 653
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate HUSH S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 629
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 629
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate HUSH D6 -> D7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 629
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 629
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate V3 D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 664
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 664
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Helix D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 627
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 627
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Helix D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 627
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 627
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Hyperion S5 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 628
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 628
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Hyperion S18 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 628
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 628
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Black Dragon S5 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 683
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 683
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Black Dragon S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 683
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 683
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Black Dragon D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 683
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 683
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate BSPower Explosion S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 688
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 688
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Start On Red S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 637
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 637
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Start On Red D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 637
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 637
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Start On Red D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 637
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 637
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Visual Dream2 (In Fiction) D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 687
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 687
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Death Moon S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 532
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 532
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Super Stylin' S7 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 633
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 633
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Super Stylin' S9 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 633
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 633
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Super Stylin' D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 633
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 633
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Keep On! S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 656
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 656
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Keep On! D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 656
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 656
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Asterios -ReEntry- S11 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 515
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 515
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Le Grand Bleu D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 534
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 534
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Gothique Resonance S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 677
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 677
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Gothique Resonance S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 677
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 677
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Gothique Resonance D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 677
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 677
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Bedlam D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 646
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 646
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate A Site De La Rue S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 684
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 684
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate A Site De La Rue D12 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 684
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 684
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Clue D10 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 620
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 620
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Clue D22 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 620
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 620
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Redline S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 634
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 634
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Redline D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 634
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 634
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Kill Them! D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 651
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 651
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Donatello S21 -> S22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 671
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 671
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Fallen Angel S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 494
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 494
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Fallen Angel D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 494
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 494
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Fallen Angel D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 494
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 494
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Vulcan S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 535
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 535
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Gargoyle  [FULL] S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 596
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 596
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Sarabande - SHORT CUT S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 537
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 537
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Sarabande - SHORT CUT D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 537
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 537
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Death Moon - SHORT CUT D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 538
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 538
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate PRIME2 Opening - SHORT CUT D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 635
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 635
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Nemesis S11 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 281
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 281
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Katkoi S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 348
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 348
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Katkoi S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 348
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 348
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Latino Virus D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 282
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 282
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Elysium S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 476
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 476
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Silhouette Effect D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 352
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 352
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Chinese Restaurant D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 284
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 284
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Avalanche S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 327
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 327
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Avalanche S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 327
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 327
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Avalanche D11 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 327
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 327
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Force of Ra S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 502
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 502
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Requiem S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 285
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 285
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Requiem D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 285
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 285
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate You Got Me Crazy S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 330
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 330
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate B2 D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 349
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 349
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Meteorize S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 286
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 286
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Meteorize S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 286
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 286
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Meteorize D8 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 286
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 286
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Meteorize D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 286
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 286
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Meteorize D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 286
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 286
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Mad5cience D7 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 481
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 481
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Hestia D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 6
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 6
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Hestia D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 6
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 6
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Amphitryon D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 504
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 504
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Amphitryon D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 504
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 504
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Leakage Voltage S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 287
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 287
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Leakage Voltage D12 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 287
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 287
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Leakage Voltage D22 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 287
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 287
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate Removable Disk0 D5 -> D6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 507
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 507
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Super Fantasy D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 288
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 288
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Violet Perfume D10 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 469
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 469
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Hyacinth S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 462
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 462
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Hyacinth S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 462
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 462
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Hyacinth D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 462
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 462
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Hyacinth D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 462
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 462
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Blaze emotion (Band version) S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 505
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 505
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Blaze emotion (Band version) D4 -> D5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 505
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 505
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Annihilator Method S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 353
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 353
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Annihilator Method S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 353
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 353
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Annihilator Method D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 353
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 353
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Move That Body! S8 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 340
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 340
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Move That Body! D10 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 340
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 340
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Rock the House S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 291
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 291
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Point Zero One S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 475
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 475
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Red Snow D23 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 482
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 482
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Campanella D10 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 509
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 509
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Campanella D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 509
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 509
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Robot Battle S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 292
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 292
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Robot Battle S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 292
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 292
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Robot Battle D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 292
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 292
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate The Revolution S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 453
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 453
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Cosmical Rhythm S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 306
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 306
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Cosmical Rhythm D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 306
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 306
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Cosmical Rhythm D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 306
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 306
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Dolly Kiss D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 351
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 351
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Milky Way Galaxy D11 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 324
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 324
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Milky Way Galaxy D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 324
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 324
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Feel My Happiness S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 508
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 508
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Feel My Happiness S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 508
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 508
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Ragnarok S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 308
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 308
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Ragnarok S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 308
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 308
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Ragnarok S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 308
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 308
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Achluoias D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 322
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 322
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Achluoias D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 322
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 322
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Karyawisata S15 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 309
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 309
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Karyawisata D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 309
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 309
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate video out c S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 467
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 467
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Reminiscence S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 463
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 463
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Reminiscence D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 463
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 463
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Reminiscence D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 463
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 463
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Moment Day D9 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 501
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 501
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Amai Yuuwaku Dangerous D5 -> D6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 461
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 461
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Yoropiku Pikuyoro! S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 465
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 465
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Imprinting S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 346
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 346
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Imprinting D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 346
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 346
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Sudden Romance [PIU Edit] D8 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 345
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 345
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Mitotsudaira D10 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 344
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 344
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Smile Diary D8 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 343
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 343
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Bad Apple!! feat. Nomico D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 342
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 342
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Prime D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 458
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 458
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Prime D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 458
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 458
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Queen of the Red S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 471
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 471
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Queen of the Red D12 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 471
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 471
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Idealized Romance D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 474
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 474
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Just Hold On (To All Fighters) S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 478
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 478
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Just Hold On (To All Fighters) D12 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 478
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 478
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Just Hold On (To All Fighters) D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 478
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 478
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Break It Down D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 483
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 483
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Hypercube D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 470
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 470
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Like Me S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 511
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 511
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Like Me D11 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 511
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 511
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Like Me D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 511
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 511
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Bad Apple!! feat. Nomico  [FULL] D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 456
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 456
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Yog-Sothoth - SHORT CUT S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 313
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 313
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Pop the Track S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 210
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 210
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Pop the Track D9 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 210
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 210
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Passacaglia S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 212
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 212
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Passacaglia S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 212
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 212
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Passacaglia D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 212
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 212
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Baroque Virus S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 213
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 213
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Baroque Virus D11 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 213
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 213
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Elise S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 214
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 214
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Ignis Fatuus (DM Ashura Mix) S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 215
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 215
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Ignis Fatuus (DM Ashura Mix) S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 215
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 215
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Love is a Danger Zone (Cranky Mix) S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 216
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 216
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Love is a Danger Zone (Cranky Mix) S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 216
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 216
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate FFF S11 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 218
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 218
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate FFF D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 218
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 218
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Accident S11 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 220
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 220
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Accident D11 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 220
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 220
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate D S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 221
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 221
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate D D12 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 221
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 221
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate D D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 221
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 221
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate U Got Me Rocking S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 222
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 222
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate U Got Me Rocking D4 -> D5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 222
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 222
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Lucid (PIU Edit) S11 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 223
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 223
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Lucid (PIU Edit) D11 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 223
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 223
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Log In S4 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 243
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 243
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Log In D10 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 243
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 243
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Follow Me D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 245
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 245
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Mental Rider D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 247
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 247
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Mental Rider D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 247
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 247
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Infinity RMX S20 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 250
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 250
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Ladybug S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 268
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 268
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Ladybug D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 268
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 268
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Hardkore of the North S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 269
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 269
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Hardkore of the North S21 -> S22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 269
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 269
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Tribe Attacker S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 271
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 271
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Tribe Attacker S6 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 271
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 271
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Utopia S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 277
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 277
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Utopia D9 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 277
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 277
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Xuxa S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 278
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 278
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Star Command S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 280
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 280
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Star Command D21 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 280
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 280
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Cleaner S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 172
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 172
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Interference S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 173
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 173
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Interference D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 173
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 173
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Interference D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 173
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 173
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Reality S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 174
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 174
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Reality S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 174
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 174
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Reality D4 -> D6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 174
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 174
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Butterfly S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 176
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 176
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Butterfly S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 176
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 176
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Butterfly D7 -> D8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 176
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 176
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate We Got 2 Know S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 178
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 178
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate We Got 2 Know D4 -> D7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 178
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 178
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Gargoyle S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 201
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 201
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Gargoyle D12 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 201
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 201
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Allegro Con Fuoco S4 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 202
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 202
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Allegro Con Fuoco D9 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 202
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 202
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Hungarian Dance V S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 179
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 179
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Hungarian Dance V D9 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 179
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 179
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate The Devil D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 180
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 180
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate X-Rave D11 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 203
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 203
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate X-Rave D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 203
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 203
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Native S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 181
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 181
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Native D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 181
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 181
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Smells Like a Chocolate S4 -> S3

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 3)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 204
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 204
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Rerate Necromancy D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 205
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 205
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Vacuum Cleaner S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 182
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 182
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Vacuum Cleaner D27 -> D26

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 26)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 182
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 27)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 26)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 182
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 27)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 26);



--  Rerate Everybody Got 2 Know S19 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 183
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 183
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Everybody Got 2 Know D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 183
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 183
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Interference  [FULL] S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 184
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 184
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Interference  [FULL] D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 184
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 184
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Trotpris - SHORT CUT D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 185
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 185
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Night Duty S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 696
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 696
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Night Duty D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 696
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 696
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Pine Nut S13 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 190
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 190
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Pine Nut D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 190
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 190
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Pine Nut D22 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 190
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 190
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate Jonathan's Dream D10 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 192
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 192
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate XTREE S7 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 129
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 129
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate XTREE S12 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 129
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 129
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate XTREE D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 129
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 129
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate XTREE D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 129
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 129
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Sorceress Elise D8 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 130
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 130
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Sorceress Elise D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 130
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 130
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Betrayer -Act. 2- S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 369
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 369
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Destination S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 132
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 132
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Destination D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 132
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 132
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Do It reggae Style D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 372
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 372
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Xenesis S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 134
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 134
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Xenesis D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 134
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 134
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Arirang S11 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 135
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 135
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Arirang D12 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 135
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 135
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Arirang D21 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 135
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 135
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Tek -Club Copenhagen- S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 136
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 136
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Tek -Club Copenhagen- S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 136
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 136
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Hello William S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 137
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 137
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Hello William D9 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 137
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 137
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Turkey March -Minimal Tunes- D11 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 138
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 138
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Get Up (and Go) S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 139
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 139
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Get Up (and Go) D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 139
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 139
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Phantom -Intermezzo- S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 140
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 140
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Mission Possible -Blowback- D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 381
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 381
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Pumping Jumping S1 -> S2

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 2)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 387
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2);



--  Rerate Pumping Jumping S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 387
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Pumping Jumping S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 387
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Pumping Jumping S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 387
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Pumping Jumping D6 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 387
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Pumping Jumping D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 387
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 387
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate B.P Classic Remix S12 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 141
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 141
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate B.P Classic Remix D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 141
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 141
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate PaPa Helloizing S8 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 142
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 142
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate B.P Classic Remix 2 S11 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 143
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 143
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Set Up Me2 Mix S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 145
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 145
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate msgoon RMX pt. 6 D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 146
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 146
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Final Audition 2 - SHORT CUT D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 147
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 147
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Final Audition 3 - SHORT CUT D16 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 148
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 148
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Love is a Danger Zone - SHORT CUT D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 150
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 150
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Love is a Danger Zone pt.2 - SHORT CUT S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 151
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 151
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Love is a Danger Zone pt.2 - SHORT CUT D22 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 151
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 151
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate Extravaganza - SHORT CUT S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 152
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 152
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Extravaganza - SHORT CUT D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 152
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 152
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Extravaganza - SHORT CUT D22 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 152
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 152
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate CHICKEN WING - SHORT CUT D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 153
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 153
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Winter - SHORT CUT S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 154
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 154
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Winter - SHORT CUT D10 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 154
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 154
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Solitary 2 - SHORT CUT D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 155
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 155
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Exceed2 Opening - SHORT CUT S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 158
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 158
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate NX Opening - SHORT CUT D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 159
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 159
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate K.O.A: Alice In Wonderworld - SHORT CUT S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 160
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 160
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Bemera - SHORT CUT S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 161
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 161
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Bemera - SHORT CUT S23 -> S22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 161
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 161
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Destination - SHORT CUT S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 163
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 163
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Destination - SHORT CUT D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 163
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 163
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Destination - SHORT CUT D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 163
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 163
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Tepris D9 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 164
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 164
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Tepris D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 164
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 164
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Napalm S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 165
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 165
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Napalm D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 165
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 165
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Blaze Emotion D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 78
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 78
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Blaze Emotion D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 78
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 78
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Blaze Emotion D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 78
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 78
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Cannon X.1 S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 79
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 79
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Cannon X.1 D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 79
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 79
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate The People Didn't Know S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 81
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 81
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate The People Didn't Know D7 -> D8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 81
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 81
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate DJ Otada S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 82
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 82
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate DJ Otada S8 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 82
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 82
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate K.O.A: Alice In Wonderworld S2 -> S1

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 1)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 83
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 83
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 1);



--  Rerate K.O.A: Alice In Wonderworld S8 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 83
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 83
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate K.O.A: Alice In Wonderworld D10 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 83
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 83
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate K.O.A: Alice In Wonderworld D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 83
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 83
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate My Dreams D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 84
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 84
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Toccata S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 85
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 85
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Toccata D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 85
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 85
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Toccata D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 85
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 85
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Final Audition Ep. 2-X S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 86
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 86
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate The People Didn't Know Pumping Up S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 87
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 87
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate The People Didn't Know Pumping Up D4 -> D6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 87
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 87
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Caprice of DJ Otada S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 88
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 88
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Caprice of DJ Otada S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 88
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 88
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Dr. KOA S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 89
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 89
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Turkey Virus D11 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 421
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 421
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Chopsticks Challenge  [FULL] S15 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 90
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 90
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Chopsticks Challenge  [FULL] D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 90
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 90
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Beat the Ghost S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 93
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 93
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Beat the Ghost S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 93
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 93
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Caprice of Otada D10 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 94
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 94
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Caprice of Otada D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 94
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 94
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Caprice of Otada D21 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 94
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 94
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Money D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 411
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 411
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Monkey Fingers 2 D7 -> D8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 95
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 95
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Faster Z S11 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 96
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 96
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Faster Z S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 96
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 96
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Faster Z D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 96
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 96
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Pumptris Quattro S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 97
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 97
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Pumptris Quattro S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 97
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 97
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Pumptris 8Bit ver. S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 91
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 91
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Pumptris 8Bit ver. S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 91
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 91
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Higgledy Piggledy S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 98
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 98
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Higgledy Piggledy D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 98
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 98
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Jam O Beat S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 408
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 408
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Money Fingers S8 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 412
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 412
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Money Fingers D9 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 412
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 412
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Money Fingers D17 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 412
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 412
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate EXTRA BanYa Remix S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 44
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 44
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate EXTRA BanYa Remix D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 44
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 44
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Witch Doctor #1 S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 100
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 100
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Witch Doctor #1 S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 100
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 100
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Chimera S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 102
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 102
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Chimera D16 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 102
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 102
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate 2006 Love Song D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 392
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 392
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Do U Know That-Old School S15 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 103
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 103
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Do U Know That-Old School D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 103
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 103
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Bullfighter's Song S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 105
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 105
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Bullfighter's Song S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 105
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 105
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Bullfighter's Song S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 105
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 105
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Bullfighter's Song D9 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 105
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 105
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Ugly Dee S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 106
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 106
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Ugly Dee D15 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 106
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 106
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Final Audition Ep. 2-1 S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 107
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 107
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Wi-Ex-Doc-Va S15 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 109
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 109
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Wi-Ex-Doc-Va D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 109
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 109
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Love is a Danger Zone 2  [FULL] S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 111
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 111
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Beat of the War 2  [FULL] S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 112
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 112
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Beat of the War 2 S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 47
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 47
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Beat of the War 2 S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 47
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 47
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Beat of the War 2 S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 47
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 47
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Beat of the War 2 D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 47
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 47
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Moonlight S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 48
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 48
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Moonlight D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 48
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 48
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Witch Doctor S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 49
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 49
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Love is a Danger Zone pt. 2 S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 50
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 50
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Love is a Danger Zone pt. 2 D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 50
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 50
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Love is a Danger Zone pt. 2 D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 50
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 50
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Phantom S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 51
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 51
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Phantom D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 51
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 51
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Phantom D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 51
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 51
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Papa Gonzales D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 52
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 52
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Papa Gonzales D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 52
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 52
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Jump S13 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 764
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 764
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Love is a danger zone 2 (try to B.P.M.) S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 53
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 53
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Love is a danger zone 2 (try to B.P.M.) D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 53
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 53
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Love is a Danger Zone pt.2 another S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 54
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 54
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Love is a Danger Zone pt.2 another S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 54
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 54
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Hi Bi D8 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 56
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 56
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Hi Bi D19 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 56
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 56
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Solitary 2 S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 57
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 57
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Solitary 2 D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 57
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 57
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Canon D S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 58
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 58
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Tream Vook of the war REMIX S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 59
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 59
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Tream Vook of the war REMIX D15 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 59
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 59
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Banya Classic Remix D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 60
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 60
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Banya Classic Remix D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 60
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 60
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate BanYa HipHop Remix S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 61
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 61
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate BanYa HipHop Remix D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 61
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 61
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Canon D - FULL SONG S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 62
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 62
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Final Audition 3 D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 63
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 63
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Naissance 2 S13 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 64
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 64
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Naissance 2 D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 64
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 64
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Monkey Fingers S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 65
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 65
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Monkey Fingers S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 65
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 65
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Blazing S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 66
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 66
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Blazing S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 66
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 66
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Blazing D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 66
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 66
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Pump Me Amadeus S11 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 67
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 67
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Pump Me Amadeus D12 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 67
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 67
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Pump Me Amadeus D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 67
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 67
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate X-Tream S4 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 68
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 68
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate X-Tream S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 68
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 68
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate X-Tream S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 68
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 68
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate X-Tream D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 68
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 68
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Get Up! S4 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 69
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 69
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Get Up! S8 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 69
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 69
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Get Up! D12 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 69
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 69
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Get Up! D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 69
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 69
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Dignity S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 76
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 76
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Dignity S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 76
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 76
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Dignity S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 76
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 76
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Dignity S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 76
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 76
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Dignity D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 76
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 76
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Chicken Wing D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 42
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 42
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Radetzky Can Can S8 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 763
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 763
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Radetzky Can Can S13 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 763
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 763
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Radetzky Can Can D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 763
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 763
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Final Audition Ep. 1 S7 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 43
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 43
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Final Audition Ep. 1 S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 43
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 43
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Final Audition Ep. 1 S20 -> S21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 43
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 43
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Final Audition Ep. 1 D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 43
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 43
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Bee S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 25
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 25
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Bee D12 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 25
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 25
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Bee D22 -> D23

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 23)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 25
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 25
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23);



--  Rerate D Gang S4 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 431
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 431
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate D Gang D7 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 431
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 431
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate D Gang D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 431
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 431
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Hello S7 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 434
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 434
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Hello S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 434
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 434
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Beat of the War S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 26
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 26
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Beat of the War D19 -> D20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 26
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 26
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Beat of the War D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 26
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 26
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Come to Me D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 27
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 27
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Dr. M S8 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 28
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 28
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Dr. M S12 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 28
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 28
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Dr. M D11 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 28
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 28
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Get Your Groove On S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 433
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 433
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Get Your Groove On D9 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 433
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 433
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Love is a Danger Zone S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 30
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 30
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Love is a Danger Zone S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 30
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 30
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Love is a Danger Zone S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 30
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 30
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Love is a Danger Zone D6 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 30
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 30
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Maria S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 31
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 31
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Maria S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 31
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 31
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Maria S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 31
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 31
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Maria D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 31
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 31
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Maria D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 31
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 31
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate My Way S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 32
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 32
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate My Way S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 32
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 32
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate My Way S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 32
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 32
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate My Way D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 32
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 32
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Point Break S9 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 33
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 33
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Point Break D9 -> D7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 33
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 33
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Street Show Down S7 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 437
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 437
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Street Show Down S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 437
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 437
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Street Show Down D13 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 437
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 437
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Street Show Down D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 437
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 437
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Top City S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 438
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 438
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Top City D7 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 438
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 438
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Top City D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 438
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 438
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Winter S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 34
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 34
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Winter S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 34
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 34
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Winter D12 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 34
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 34
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Winter D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 34
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 34
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Will-O-The-Wisp S11 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 35
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 35
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Will-O-The-Wisp S14 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 35
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 35
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Will-O-The-Wisp D14 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 35
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 35
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Will-O-The-Wisp D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 35
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 35
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Till the End of Time S2 -> S3

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 3)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 36
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 36
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Rerate Till the End of Time S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 36
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 36
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Till the End of Time D8 -> D10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 36
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 36
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Oy Oy Oy S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 37
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 37
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Oy Oy Oy S6 -> S8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 37
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 37
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Oy Oy Oy S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 37
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 37
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate We Will Meet Again S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 439
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 439
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate We Will Meet Again D8 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 439
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 439
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Miss S' Story S5 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 435
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 435
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Set Me Up S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 38
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 38
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Set Me Up S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 38
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 38
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Set Me Up D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 38
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 38
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Dance With Me S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 39
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 39
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Vook S4 -> S3

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 3)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 40
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 40
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Rerate Vook S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 40
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 40
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Vook S15 -> S16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 40
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 40
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Vook S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 40
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 40
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Vook D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 40
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 40
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Vook D19 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 40
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 40
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Csikos Post S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 41
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 41
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Csikos Post S13 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 41
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 41
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Csikos Post D8 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 41
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 41
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Pump Jump S4 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 499
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 499
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Pump Jump D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 499
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 499
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate All I Want For X-mas S6 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 1
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 1
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate All I Want For X-mas D7 -> D8

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 8)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 1
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 1
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8);



--  Rerate Beethoven Virus S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 4
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 4
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Beethoven Virus D11 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 4
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 4
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Beethoven Virus D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 4
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 4
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Slam S3 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 17
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 17
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Slam S6 -> S7

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 7)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 17
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 17
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7);



--  Rerate Slam S19 -> S20

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 20)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 17
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 17
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20);



--  Rerate Slam D6 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 17
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 17
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Slam D21 -> D22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 17
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 17
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Slam D23 -> D24

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 24)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 17
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 17
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 23)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 24);



--  Rerate Oh! Rosa! S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 498
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 498
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Oh! Rosa! S13 -> S14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 498
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 498
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Oh! Rosa! D7 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 498
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 498
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate First Love S4 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 443
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 443
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate First Love S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 443
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 443
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate First Love D14 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 443
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 443
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Betrayer S8 -> S9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 441
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 441
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Solitary S9 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 5
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 5
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Solitary D16 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 5
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 5
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Mr. Larpus S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 7
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 7
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Mr. Larpus S14 -> S15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 7
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 7
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Mr. Larpus D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 7
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 7
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Final Audition 2 S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 8
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 8
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Final Audition 2 S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 8
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 8
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Final Audition 2 S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 8
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 8
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Final Audition 2 D11 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 8
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 8
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Naissance S4 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 9
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 9
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Naissance S10 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 9
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 9
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Naissance D7 -> D12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 9
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 9
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Naissance D15 -> D16

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 16)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 9
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 9
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16);



--  Rerate Turkey March S16 -> S17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 10
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 10
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Turkey March S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 10
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 10
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Turkey March D9 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 10
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 10
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Turkey March D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 10
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 10
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Turkey March D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 10
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 10
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate With My Lover D19 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 762
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 762
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate A Nightmare S2 -> S3

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 3)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 440
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 440
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 2)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3);



--  Rerate A Nightmare S4 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 440
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 440
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate A Nightmare D13 -> D14

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 14)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 440
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 440
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 14);



--  Rerate Close Your Eye S4 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 442
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 442
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Midnight Blue S11 -> S12

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 12)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 11
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 11
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12);



--  Rerate Midnight Blue D12 -> D13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 11
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 11
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate She Likes Pizza S8 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 448
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 448
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 8)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate She Likes Pizza D9 -> D11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 448
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 448
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate She Likes Pizza D16 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 448
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 448
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 16)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Pumping Up S4 -> S5

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 5)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 500
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 500
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5);



--  Rerate Pumping Up S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 500
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 500
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Pumping Up S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 500
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 500
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Final Audition S9 -> S10

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 10)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 12
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 12
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10);



--  Rerate Final Audition S17 -> S18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 12
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 12
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Final Audition S18 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 12
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 12
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Final Audition D15 -> D17

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 17)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 12
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 12
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17);



--  Rerate Final Audition D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 12
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 12
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Extravaganza S10 -> S11

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 11)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 13
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 13
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 10)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 11);



--  Rerate Extravaganza S12 -> S13

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 13)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 13
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 13
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 12)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13);



--  Rerate Extravaganza S17 -> S19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 13
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 13
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);



--  Rerate Extravaganza S21 -> S22

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 22)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 13
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 13
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 22);



--  Rerate Extravaganza D13 -> D15

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 15)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 13
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 13
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 13)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 15);



--  Rerate Extravaganza D20 -> D21

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 21)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 13
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 13
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 20)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 21);



--  Rerate Another Truth S3 -> S4

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 4)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 24
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 24
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 3)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 4);



--  Rerate Another Truth S5 -> S6

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'S'),
  (SELECT difficultyId FROM difficulty WHERE value = 6)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 24
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 24
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 5)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'S')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 6);



--  Rerate Another Truth D7 -> D9

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 9)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 24
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 24
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 7)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 9);



--  Rerate Another Truth D17 -> D18

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 18)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 24
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 24
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 17)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18);



--  Rerate Another Truth D18 -> D19

INSERT INTO chartRating (chartRatingId, chartId, modeId, difficultyId)
SELECT 
  (SELECT MAX(chartRatingId) FROM chartRating) + 1,
  sub.chartId,
  (SELECT modeId FROM mode WHERE internalAbbreviation = 'D'),
  (SELECT difficultyId FROM difficulty WHERE value = 19)
FROM (
  SELECT 
    crv.chartId,
    crv.chartRatingId,
    cv.operationId,
    cr.modeId,
    cr.difficultyId,
    ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
  FROM chartRatingVersion crv
  JOIN chart c ON crv.chartId = c.chartId
  JOIN chartVersion cv ON cv.chartId = c.chartId
  JOIN chartRating cr on crv.chartRatingId = cr.chartRatingId
  JOIN version v ON cv.versionId = v.versionId
  JOIN version v2 ON crv.versionId = v2.versionId
  WHERE v.mixId NOT IN (2, 8)
  AND v2.mixId NOT IN (2, 8)
  AND c.songId = 24
  AND v2.versionId != (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
) AS sub
WHERE sub.rn = 1
AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
AND NOT EXISTS (
  SELECT 1 FROM chartRating
  WHERE chartId = sub.chartId
  AND modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19)
);

INSERT INTO chartRatingVersion (chartRatingId, chartId, versionId)
SELECT
  cr2.chartRatingId,
  cr2.chartId,
  (SELECT versionId FROM version
   WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
   AND internalTitle = 'v1.00.1')
FROM chartRating cr2
WHERE cr2.chartId IN (
  SELECT sub.chartId
  FROM (
    SELECT 
      crv.chartId,
      cv.operationId,
      cr.modeId,
      cr.difficultyId,
      ROW_NUMBER() OVER(PARTITION BY crv.chartId ORDER BY v.sortOrder DESC, v2.sortOrder DESC) as rn
    FROM chartRatingVersion crv
    JOIN chart c ON crv.chartId = c.chartId
    JOIN chartVersion cv ON cv.chartId = c.chartId
    JOIN chartRating cr ON crv.chartRatingId = cr.chartRatingId
    JOIN version v ON cv.versionId = v.versionId
    JOIN version v2 ON crv.versionId = v2.versionId
    WHERE v.mixId NOT IN (2, 8)
    AND v2.mixId NOT IN (2, 8)
    AND c.songId = 24
    AND v2.versionId != (SELECT versionId FROM version
     WHERE mixId = (SELECT mixId FROM mix WHERE internalTitle = 'Phoenix')
     AND internalTitle = 'v1.00.1')
  ) AS sub
  WHERE sub.rn = 1
  AND sub.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
  AND sub.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 18)
  AND sub.operationId != (SELECT operationId FROM operation WHERE internalTitle = 'DELETE')
)
AND cr2.modeId = (SELECT modeId FROM mode WHERE internalAbbreviation = 'D')
AND cr2.difficultyId = (SELECT difficultyId FROM difficulty WHERE value = 19);


